{"version":3,"file":"Devtools.js","sourceRoot":"","sources":["../src/Devtools.ts"],"names":[],"mappings":"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","sourcesContent":["import { SERIALIZE } from './rehydrate'\n\nexport type Message = {\n  type: string\n  data?: object\n}\n\nexport type DevtoolsMessage = {\n  type: string\n  appName: string\n  data: any\n}\n\nexport class Devtools {\n  private safeClassNames: Set<string> = new Set()\n  private unsafeClassNames: Set<string> = new Set()\n  private buffer: string[] = []\n  private ws: WebSocket\n  private isConnected: boolean = false\n  private doReconnect: boolean = false\n  private hasWarnedReconnect: boolean = false\n  private reconnectInterval: number = 10000\n  private name: string\n  constructor(name: string) {\n    this.name = name\n  }\n  connect = (host: string, onMessage: (message: Message) => void) => {\n    host = host || 'localhost:3031'\n\n    this.ws = new WebSocket(`ws://${host}?name=${this.name}`)\n    this.ws.onmessage = (event) => onMessage(JSON.parse(event.data))\n    this.ws.onopen = () => {\n      this.isConnected = true\n      this.sendBuffer()\n    }\n    this.ws.onerror = () => {\n      console.error(\n        `OVERMIND DEVTOOLS: Not able to connect. You are trying to connect to \"${host}\", but there was no devtool there. Try the following:\n        \n          - Make sure you are running the latest version of the devtools, using \"npx overmind-devtools@latest\" or install latest extension for VSCode\n          - Close the current tab and open a new one\n          - Make sure the correct port is configured in the devtools\n        `\n      )\n    }\n    this.ws.onclose = () => {\n      this.isConnected = false\n\n      if (this.doReconnect && !this.hasWarnedReconnect) {\n        console.warn(\n          'Debugger application is not running on selected port... will reconnect automatically behind the scenes'\n        )\n        this.hasWarnedReconnect = true\n      }\n\n      if (this.doReconnect) {\n        this.reconnect(host, onMessage)\n      }\n    }\n  }\n  private reconnect(host, onMessage) {\n    setTimeout(\n      () =>\n        this.connect(\n          host,\n          onMessage\n        ),\n      this.reconnectInterval\n    )\n  }\n  send(message: Message) {\n    const safeClassNames = this.safeClassNames\n    const unsafeClassNames = this.unsafeClassNames\n    const stringifiedMessage = JSON.stringify(\n      message,\n      function (_, value) {\n        if (typeof value === 'function') {\n          return '[Function]'\n        }\n\n        if (this.__CLASS__) {\n          return value\n        }\n\n        if (value && value[SERIALIZE]) {\n          return {\n            __CLASS__: true,\n            name: value.constructor.name,\n            value   \n          }\n        }\n\n        if (\n          typeof value === 'object' &&\n          value !== null &&\n          !Array.isArray(value) &&\n          value.constructor &&\n          value.constructor.name !== 'Object'\n        ) {\n          if (!safeClassNames.has(value.constructor.name) && !unsafeClassNames.has(value.constructor.name)) {\n            try {\n              JSON.stringify(value)\n              safeClassNames.add(value.constructor.name)\n            } catch {\n              unsafeClassNames.add(value.constructor.name)\n            }\n          }\n          \n          if (safeClassNames.has(value.constructor.name)) {\n            return {\n              __CLASS__: true,\n              name: value.constructor.name,\n              value\n            }\n          } else {\n            return `[${value.constructor.name || 'NOT SERIALIZABLE'}]`\n          }\n        }\n\n        return value\n      },\n      0\n    )\n    this.buffer.push(stringifiedMessage)\n    this.sendBuffer()\n  }\n  private sendBuffer = () => {\n    if (this.isConnected && this.buffer.length) {\n      this.ws.send(\n        `{ \"appName\": \"${this.name}\", \"message\": ${this.buffer.shift()} }`\n      )\n\n      if (this.buffer.length) {\n        setTimeout(this.sendBuffer)\n      }\n    }\n  }\n}\n"]}